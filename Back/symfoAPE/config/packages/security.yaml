security:
    encoders:
       Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_PARENT: ROLE_USER
        ROLE_REDACT: ROLE_PARENT
        ROLE_ADMIN: ROLE_REDACT


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        in_memory:
            memory:
                users:
                    ryan:
                        password: ryanpass
                        roles: 'ROLE_USER'
                    admin:
                        password: kitten
                        roles: 'ROLE_ADMIN'
        # app_user_provider:
        #     entity:
        #         class: App\Entity\User
        #         property: email
        # used to reload user from session & other features (e.g. switch_user)
        
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #login:
            #pattern:  ^/api/login
            #stateless: true
            #anonymous: true
        main: 
            http_basic:
                provider: in_memory
            # json_login:
            #     check_path:               /api/login_check
            #     success_handler:          lexik_jwt_authentication.handler.authentication_success
            #     failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#
#        api:
#            pattern:   ^/api
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
#
#    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api/profil, roles: ROLE_USER }
        - { path: ^/api/redact, roles: ROLE_REDACT }
        - { path: ^/api/media, roles: ROLE_PARENT}


#        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

